// Code Generated by Sidekick is for learning and experimentation purposes only.
import { DataTypes, Model, Optional } from "sequelize";
import { sequelize } from "../config/db";
import Task from "./task";

interface CommentAttributes {
  id: number;
  taskId: number;
  content: string;
}

interface CommentCreationAttributes extends Optional<CommentAttributes, "id"> {}

class Comment
  extends Model<CommentAttributes, CommentCreationAttributes>
  implements CommentAttributes
{
  public id!: number;
  public taskId!: number;
  public content!: string;

  public readonly createdAt!: Date;
  public readonly updatedAt!: Date;
}

Comment.init(
  {
    id: {
      type: DataTypes.INTEGER.UNSIGNED,
      autoIncrement: true,
      primaryKey: true,
    },
    taskId: {
      type: DataTypes.INTEGER.UNSIGNED,
      allowNull: false,
    },
    content: {
      type: DataTypes.TEXT,
      allowNull: false,
    },
  },
  {
    sequelize,
    tableName: "comments",
  }
);

Comment.belongsTo(Task, { foreignKey: "taskId" });
Task.hasMany(Comment, { foreignKey: "taskId" });

export default Comment;
